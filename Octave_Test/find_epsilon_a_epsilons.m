
function y = find_epsilon_a_epsilons(Equity)
% epsilon_1 is epsilon of pareto, epsilon_2 of polynomial,a is third entry

% Matlab function. Finds epsilons and a by fitting the Mixed Lorenz curve parameter a to given 
% data points and minimizing the mean square error. 


x=Equity.share_pop'; 
%CREATEFIT1(X,Y)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 17-Aug-2016 01:30:25


%% Fit: 'untitled fit 1'. % preparing the variables for the fit function
y=Equity.cumulated_dist_vector';

[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( [' a*(1-(1-x)^epsilon_1 )+(1- a )*x^(1/ epsilon_2 )'], 'independent', 'x', 'dependent', ['a','epsilon_1','epsilon_2'] ); % we can define more than 1 number of optimization parameter
opts = fitoptions( 'Method', 'NonlinearLeastSquares');
opts.Display = 'Off';
opts.StartPoint = [0.7,0.3,0.3];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts ); 
error = gof.rmse;

y = [fitresult.epsilon_1,fitresult.epsilon_2,fitresult.a,error];
% fitresult is an object including optimized parameters (here is the "epsilon"), 
%gof is a structure, including statistics regarding the goodness of the fit



